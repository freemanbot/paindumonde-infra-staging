apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: app
  name: django-pv-claim
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  template:
    spec:
      containers:
      - image: gcr.io/minikube-tutorial/paindumonde-django-app:71e18c2cf811a093c28c5f0d67e4989b655fb62e
        name: app
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
  namespace: default
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app
    spec:
      containers:
      - env:
        - name: CACHE_URL
          value: redis://redis
        - name: DATABASE_URL
          value: postgres://app_user:changeme@db/app_db
        - name: DJANGO_SECRET_KEY
          value: changeme
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_ENDPOINT
          value: elasticsearch
        image: gcr.io/minikube-tutorial/paindumonde-django-app:71e18c2cf811a093c28c5f0d67e4989b655fb62e
        name: app
        ports:
        - containerPort: 8000
          name: app
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: django-persistent-storage
      restartPolicy: Always
      volumes:
      - name: django-persistent-storage
        persistentVolumeClaim:
          claimName: django-pv-claim
